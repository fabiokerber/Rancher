Vagrant.configure('2') do |config|

    config.env.enable
    config.vm.boot_timeout = 1200

    config.vm.define 'rancher_master' do |rancher_master|

        rancher_master.vm.box = 'ubuntu/focal64'
        rancher_master.vm.hostname = 'rancher-master'
        rancher_master.vm.network 'private_network', ip: ENV['MASTER_IP']
        rancher_master.vm.network 'forwarded_port', guest: 80, host: 80
        rancher_master.vm.network 'forwarded_port', guest: 443, host: 443

        rancher_master.vm.provision 'shell', inline: 'echo "$IP rancher-k8s1" >> /etc/hosts', env: {"IP" => ENV['K8S1_IP']}
        rancher_master.vm.provision 'shell', inline: 'echo "$IP rancher-k8s2" >> /etc/hosts', env: {"IP" => ENV['K8S2_IP']}
        rancher_master.vm.provision 'shell', inline: 'echo "$IP rancher-k8s3" >> /etc/hosts', env: {"IP" => ENV['K8S3_IP']}
        rancher_master.vm.provision 'shell', inline: 'sudo apt update'
        rancher_master.vm.provision 'shell', inline: 'sudo apt install -y docker.io && sudo systemctl start docker && sudo systemctl enable docker'
        rancher_master.vm.provision 'shell', inline: 'sudo docker run -d --name rancher --restart=unless-stopped -v /opt/rancher:/var/lib/rancher -p 80:80 -p 443:443 --privileged $RANCHER', env: {"RANCHER" => ENV['RANCHER_VERSION']}

        rancher_master.vm.provider 'virtualbox' do |vb|
            vb.memory = 4096
            vb.cpus = 4
            vb.name = 'rancher-master'
            vb.customize ['modifyvm', :id, '--nicpromisc2', 'allow-all']
            vb.customize ['modifyvm', :id, '--nested-hw-virt', 'on']

        end

    end

    config.vm.define 'rancher_k8s1' do |rancher_k8s1|

        rancher_k8s1.vm.box = 'ubuntu/focal64'
        rancher_k8s1.vm.hostname = 'rancher-k8s1'
        rancher_k8s1.vm.network 'private_network', ip: ENV['K8S1_IP']

        rancher_k8s1.vm.provision 'shell', inline: 'echo "$IP rancher-master" >> /etc/hosts', env: {"IP" => ENV['MASTER_IP']}
        rancher_k8s1.vm.provision 'shell', inline: 'echo "$IP rancher-k8s2" >> /etc/hosts', env: {"IP" => ENV['K8S2_IP']}
        rancher_k8s1.vm.provision 'shell', inline: 'echo "$IP rancher-k8s3" >> /etc/hosts', env: {"IP" => ENV['K8S3_IP']}
        rancher_k8s1.vm.provision 'shell', inline: 'sudo apt update'
        rancher_k8s1.vm.provision 'shell', inline: 'sudo apt install -y docker.io && sudo systemctl start docker && sudo systemctl enable docker'

        rancher_k8s1.vm.provider 'virtualbox' do |vb|
            vb.memory = 2048
            vb.cpus = 4
            vb.name = 'rancher-k8s1'
            vb.customize ['modifyvm', :id, '--nicpromisc2', 'allow-all']
            vb.customize ['modifyvm', :id, '--nested-hw-virt', 'on']

        end

    end

    config.vm.define 'rancher_k8s2' do |rancher_k8s2|

        rancher_k8s2.vm.box = 'ubuntu/focal64'
        rancher_k8s2.vm.hostname = 'rancher-k8s2'
        rancher_k8s2.vm.network 'private_network', ip: ENV['K8S2_IP']

        rancher_k8s2.vm.provision 'shell', inline: 'echo "$IP rancher-master" >> /etc/hosts', env: {"IP" => ENV['MASTER_IP']}
        rancher_k8s2.vm.provision 'shell', inline: 'echo "$IP rancher-k8s1" >> /etc/hosts', env: {"IP" => ENV['K8S1_IP']}
        rancher_k8s2.vm.provision 'shell', inline: 'echo "$IP rancher-k8s3" >> /etc/hosts', env: {"IP" => ENV['K8S3_IP']}
        rancher_k8s2.vm.provision 'shell', inline: 'sudo apt update'
        rancher_k8s2.vm.provision 'shell', inline: 'sudo apt install -y docker.io && sudo systemctl start docker && sudo systemctl enable docker'

        rancher_k8s2.vm.provider 'virtualbox' do |vb|
            vb.memory = 2048
            vb.cpus = 4
            vb.name = 'rancher-k8s2'
            vb.customize ['modifyvm', :id, '--nicpromisc2', 'allow-all']
            vb.customize ['modifyvm', :id, '--nested-hw-virt', 'on']

        end

    end

    config.vm.define 'rancher_k8s3' do |rancher_k8s3|

        rancher_k8s3.vm.box = 'ubuntu/focal64'
        rancher_k8s3.vm.hostname = 'rancher-k8s3'
        rancher_k8s3.vm.network 'private_network', ip: ENV['K8S3_IP']

        rancher_k8s3.vm.provision 'shell', inline: 'echo "$IP rancher-master" >> /etc/hosts', env: {"IP" => ENV['MASTER_IP']}
        rancher_k8s3.vm.provision 'shell', inline: 'echo "$IP rancher-k8s1" >> /etc/hosts', env: {"IP" => ENV['K8S1_IP']}
        rancher_k8s3.vm.provision 'shell', inline: 'echo "$IP rancher-k8s2" >> /etc/hosts', env: {"IP" => ENV['K8S2_IP']}
        rancher_k8s3.vm.provision 'shell', inline: 'sudo apt update'
        rancher_k8s3.vm.provision 'shell', inline: 'sudo apt install -y docker.io && sudo systemctl start docker && sudo systemctl enable docker'

        rancher_k8s3.vm.provider 'virtualbox' do |vb|
            vb.memory = 2048
            vb.cpus = 4
            vb.name = 'rancher-k8s3'
            vb.customize ['modifyvm', :id, '--nicpromisc2', 'allow-all']
            vb.customize ['modifyvm', :id, '--nested-hw-virt', 'on']

        end

    end

end